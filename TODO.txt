STILL TODO:

* The datatables default of 10 entries per page isn't enough; make it 100 or something.

* The new "lobby view" ("/players/?seated=False") doesn't tell you how many *total* players there are.  (Because I nuked the " 3 / 15 players" thing)

* When someone clicks the "partner up" button, the other person needs to get an alert, telling them that that happened.

* It should be blindingly obvious that you have a partner so you don't have to go around looking for another one.

* when not logged in, we still attempt to listen to server-sent events ... but fail with 400 (cuz that endpoint requires authentication, I guess).

* When sending a chat message, the newly-appended log line isn't styled quite the same as those logs that were sent by the server when the page loaded.

* Maybe give some idea of user activity, in the lobby: e.g. if a user's "last_login" was a while ago, make the font dim; or if they last posted a chat message or sat at a table or took an action in a game.

* When sending a chat message, make RET submit, so that we don't have to actually click on the button.
  Note that simply using htmx with `hx-trigger="keyup[key=='Enter']"` doesn't work on mobile, since they ain't no key events ðŸ˜­

* when bob logs out, his name should vanish from the "lobby"

* the coverage report has a lot of "empty"s near the right margin, and "coverage html" prints `CoverageWarning: No contexts were measured`

* paginate the player and table lists
  <https://spookylukey.github.io/django-views-the-right-way/list-view.html#displaying-a-list-of-objects> has an example

* figure out why "generate_fake_data" only creates 7 players per second -- it otta do hundreds.

* Provide a view or two that shows what a player has done in the past.
  In particular, what tables they played at, and who else was at those tables.

DONE:

* Write a player-list partial template.  It should include both the "lookin' for love" filter, and a new "are they in the lobby" filter.
  Use that on both "/players/" and "/lobby/" (distinguished only by different default settings on those filters)
  - It's not a partial; I just made "players" do double-duty

* When displaying the signup page, put text focus on the first field, so I can start typing without having to hit TAB

* When sending a chat message, but failing -- because e.g. you or the recipient are seated at a table, there's no feedback about the failure.  Either
  - pop up a dialog with the body of the 403 response; and/or
  - just don't have the text area and "talk with" button visible in the first place.

* Refactor: I've got two almost-but-not-quite-identical chunks of HTML for rendering a chat log: one in the lobby, one in the player detail.
  Ideas:
  âœ“ have a separate template that renders just that, and then stick the output of rendering that into the context of both lobby and player_detail
  âœ˜ use [django-template-partials](https://github.com/carltongibson/django-template-partials)
    - of course that will entail me looking again into HTMX 'cuz carlton sez it's the bee's knees

* when bob partners with tonya, I see `2024-08-16T16:08:06.412297+00:00` `bob` `Partnered with tonya` in the lobby chat, but no "tonya partnered with bob".  On the one hand, this seems fine; on the other hand, I expected to see both messages.
  - Calling this "done" without doing anything; the current behavior seems correct.

* combine PlayerMessage with LobbyMessage.  Maybe if the recipient is NULL that means it's a lobby message?  But then what do I do when I want to have messages directed at a table?  Maybe add a "recipient model" column, so that the target of a message can be NULL (meaning lobby), or anything with a django model.

* Inspired by https://spookylukey.github.io/django-views-the-right-way/, convert some CBVs into function-based views.

* Write my own `@logged_in_as_player_required` decorator, that is like `@login_required`, but checks that there is a corresponding Player object, and redirects with an error message.

* the "lookin' for love" dropdown is always set to "unknown" when the page loads, even if a filter is in effect.
  E.g. <http://localhost:8000/players/?&lookin_for_love=true> correctly displays only partner-ess players, but the dropdown shows "Unknown" when it should show "yes".

  Dunno what I did to fix this, really, apart from making it a lot simpler

* investigate partner weirdness.

  - create two unpartnered players -- `just drop pop --tables=0 --players=2` seems to work
  - log in as player 1
  - go to /player/2/; you'll see "Partner Me Up, Daddy-O"
  - duplicate that page.
  - click the button on one of the pages.  It updates appropriately: the button goes away, and it says "Alice is partnered with Bob" or whatever.
  - go to the other page.  Click its button.  You *should* see either the same "Alice is partnered with Bob" page, or even some sort of exception; but instead it just stays as is.
  - reloading the pages sometimes does nothing, sometimes "fixes" them (i.e., shows what I'd expected)
  - no interesting output in either the Unix console or the JS console
  - only clue: browser's developer tools show the POST data as
    `me=1&them=2&action=partnerup&action=partnerup` -- why is the "action" duplicated?
