# Generated by Django 5.1.2 on 2024-11-14 18:40

import django.db.models.deletion
from django.db import migrations, models
from app.models.board import TOTAL_BOARDS

def create_needed_tournaments(apps, schema_editor):
    Board = apps.get_model("app", "Board")
    Tournament = apps.get_model("app", "Tournament")

    for index, board in enumerate(Board.objects.order_by("id").all()):
        tournament_number = Board.objects.count() // TOTAL_BOARDS
        t, _ = Tournament.objects.get_or_create(pk=tournament_number)


def update_tournament_field(apps, schema_editor):
    Board = apps.get_model("app", "Board")
    Tournament = apps.get_model("app", "Tournament")

    for index, board in enumerate(Board.objects.order_by("id").all()):
        tournament_number = Board.objects.count() // TOTAL_BOARDS
        t, _ = Tournament.objects.get_or_create(pk=tournament_number)
        board.tournament = t
        board.save()


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0032_alter_board_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.RunPython(code=create_needed_tournaments, reverse_code=migrations.RunPython.noop),
        migrations.AddField(
            model_name='board',
            name='tournament',
            field=models.ForeignKey(null=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='app.tournament'),
            preserve_default=False,
        ),
        migrations.RunPython(code=update_tournament_field, reverse_code=migrations.RunPython.noop),
    ]
