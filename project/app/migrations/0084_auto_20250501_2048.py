# Generated by Django 5.2 on 2025-05-01 20:48

import datetime
from django.db import migrations


def backfill_tournament_deadlines(apps, schema_editor):

    def hands(t):
        Hand = apps.get_model("app", "Hand")

        return Hand.objects.filter(board__in=t.board_set.all()).distinct()


    def oldest_timestamp(t):
        rv = datetime.datetime.max.replace(tzinfo=datetime.timezone.utc)
        for h in hands(t):
            rv = min(rv, h.created)

            for c in h.call_set.all():
                rv = min(rv, c.created)

        return rv


    def newest_timestamp(t):
        rv = datetime.datetime.min.replace(tzinfo=datetime.timezone.utc)
        for h in hands(t):
            rv = max(rv, h.modified)

            for c in h.call_set.all():
                rv = max(rv, c.modified)

            for p in h.play_set.all():
                rv = max(rv, p.modified)

        return rv



    Tournament = apps.get_model("app", "Tournament")
    # Find tournaments whose deadlines are NULL.
    for t in Tournament.objects.all():
        if t.signup_deadline is not None and t.play_completion_deadline is not None:
            continue

        if t.signup_deadline is None:
            o = oldest_timestamp(t)
            print(f"{o=}")
            t.signup_deadline = o
            t.save()

        if t.play_completion_deadline is None:
            n = newest_timestamp(t)
            t.play_completion_deadline = n
            t.save()

class Migration(migrations.Migration):

    dependencies = [
        ("app", "0083_hand_app_hand_a_board_can_be_played_only_once_at_a_given_table"),
    ]

    operations = [
        migrations.RunPython(backfill_tournament_deadlines, reverse_code=migrations.RunPython.noop),
    ]
