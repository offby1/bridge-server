# Generated by Django 5.1.4 on 2025-01-13 23:02

import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0043_remove_board_app_board_dealer_must_be_compass_letter_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="seat",
            options={
                "ordering": [
                    django.db.models.expressions.RawSQL(
                        "position(DIRECTION in 'NESW')", params=[]
                    )
                ]
            },
        ),
        migrations.RemoveConstraint(
            model_name="board",
            name="app_board_dealer_letter_must_be_compass_letter",
        ),
        migrations.RemoveConstraint(
            model_name="seat",
            name="app_seat_direction_valid",
        ),
        migrations.RemoveConstraint(
            model_name="seat",
            name="app_seat_direction_letter_valid",
        ),
        migrations.RemoveField(
            model_name="board",
            name="dealer",
        ),
        migrations.RenameField(
            model_name="board",
            old_name="dealer_letter",
            new_name="dealer",
        ),
        migrations.RemoveField(
            model_name="seat",
            name="direction",
        ),
        migrations.RenameField(
            model_name="seat",
            old_name="direction_letter",
            new_name="direction",
        ),
        migrations.AlterField(
            model_name="board",
            name="dealer",
            field=models.CharField(
                db_comment='corresponds to bridge library\'s "direction" '
            ),
        ),
        migrations.AlterField(
            model_name="seat",
            name="direction",
            field=models.CharField(
                choices=[("N", "North"), ("E", "East"), ("S", "South"), ("W", "West")]
            ),
        ),
        migrations.AddConstraint(
            model_name="board",
            constraint=models.CheckConstraint(
                condition=models.Q(("dealer__in", "NESW")),
                name="app_board_dealer_must_be_compass_letter",
            ),
        ),
        migrations.AddConstraint(
            model_name="seat",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    (
                        "direction__in",
                        {"E": "East", "N": "North", "S": "South", "W": "West"},
                    )
                ),
                name="app_seat_direction_valid",
            ),
        ),
    ]
