So

* why does it let me insert garbage?!?
  Because I'm supposed to use Hand.add_call_from_player instead; that validates.
* why so goddamned many queries just to insert a single row?!?
  Apparently it's the call to `send_event_to_players_and_hand` ... oy

$ docker-nuke ; just pop shell

In [1]: Call.objects.create(hand_id=1, serialized="1♧")
INSERT INTO "app_call" ("hand_id", "serialized")
VALUES (1, '1♧') RETURNING "app_call"."id"

Execution time: 0.013485s [Database: default]
SELECT "app_hand"."id",
       "app_hand"."table_id",
       "app_hand"."board_id",
       "app_hand"."open_access"
  FROM "app_hand"
 WHERE "app_hand"."id" = 1
 LIMIT 21

Execution time: 0.001228s [Database: default]
SELECT "app_table"."id",
       "app_table"."tempo_seconds"
  FROM "app_table"
 WHERE "app_table"."id" = 1
 LIMIT 21

Execution time: 0.000929s [Database: default]
SELECT "app_board"."id",
       "app_board"."ns_vulnerable",
       "app_board"."ew_vulnerable",
       "app_board"."dealer",
       "app_board"."north_cards",
       "app_board"."east_cards",
       "app_board"."south_cards",
       "app_board"."west_cards",
       "app_board"."tournament_id"
  FROM "app_board"
 WHERE "app_board"."id" = 16
 LIMIT 21

Execution time: 0.001186s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 1)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.002270s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 2)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.001424s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 3)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.001280s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 4)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.001206s [Database: default]
SELECT "app_call"."id",
       "app_call"."hand_id",
       "app_call"."serialized"
  FROM "app_call"
 WHERE "app_call"."hand_id" = 1
 ORDER BY "app_call"."id" ASC

Execution time: 0.000917s [Database: default]
SELECT COUNT(*) AS "__count"
  FROM "app_call"
 WHERE "app_call"."hand_id" = 1

Execution time: 0.000927s [Database: default]
SELECT COUNT(*) AS "__count"
  FROM "app_play"
 WHERE "app_play"."hand_id" = 1

Execution time: 0.001000s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE "app_seat"."table_id" = 1
 ORDER BY "app_seat"."direction" ASC

Execution time: 0.001444s [Database: default]
SELECT "app_table"."id",
       "app_table"."tempo_seconds"
  FROM "app_table"
 WHERE "app_table"."id" = 1
 LIMIT 21

Execution time: 0.000854s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."name" = '1'
 LIMIT 21

Execution time: 0.001940s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."id" = 3
 LIMIT 21
   FOR UPDATE

Execution time: 0.001404s [Database: default]
INSERT INTO "django_eventstream_event" ("channel", "type", "data", "eid", "created")
VALUES ('1', 'message', E'"{\\"new-call\\": {\\"serialized\\": \\"1\\\\u2667\\", \\"hand\\": {\\"id\\": 1, \\"open_access\\": false, \\"table\\": 1, \\"board\\": 16}, \\"seat_pk\\": null}, \\"tempo_seconds\\": 1.0, \\"time\\": 1735070117.0526688}"', 2, '2024-12-24 19:55:17.059926+00:00'::timestamptz) RETURNING "django_eventstream_event"."id"

Execution time: 0.001629s [Database: default]
UPDATE "django_eventstream_eventcounter"
   SET "name" = '1',
       "value" = 2,
       "updated" = '2024-12-24 19:55:17.062749+00:00'::timestamptz
 WHERE "django_eventstream_eventcounter"."id" = 3

Execution time: 0.000950s [Database: default]
SELECT "django_eventstream_event"."id",
       "django_eventstream_event"."channel",
       "django_eventstream_event"."type",
       "django_eventstream_event"."data",
       "django_eventstream_event"."eid",
       "django_eventstream_event"."created"
  FROM "django_eventstream_event"
 WHERE "django_eventstream_event"."created" < '2024-12-23 19:55:17.070521+00:00'::timestamptz
 LIMIT 50

Execution time: 0.001128s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."name" = 'all-tables'
 LIMIT 21

Execution time: 0.001247s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."id" = 4
 LIMIT 21
   FOR UPDATE

Execution time: 0.001334s [Database: default]
INSERT INTO "django_eventstream_event" ("channel", "type", "data", "eid", "created")
VALUES ('all-tables', 'message', E'"{\\"new-call\\": {\\"serialized\\": \\"1\\\\u2667\\", \\"hand\\": {\\"id\\": 1, \\"open_access\\": false, \\"table\\": 1, \\"board\\": 16}, \\"seat_pk\\": null}, \\"tempo_seconds\\": 1.0, \\"time\\": 1735070117.0925078}"', 21, '2024-12-24 19:55:17.097583+00:00'::timestamptz) RETURNING "django_eventstream_event"."id"

Execution time: 0.000943s [Database: default]
UPDATE "django_eventstream_eventcounter"
   SET "name" = 'all-tables',
       "value" = 21,
       "updated" = '2024-12-24 19:55:17.099652+00:00'::timestamptz
 WHERE "django_eventstream_eventcounter"."id" = 4

Execution time: 0.000820s [Database: default]
SELECT "django_eventstream_event"."id",
       "django_eventstream_event"."channel",
       "django_eventstream_event"."type",
       "django_eventstream_event"."data",
       "django_eventstream_event"."eid",
       "django_eventstream_event"."created"
  FROM "django_eventstream_event"
 WHERE "django_eventstream_event"."created" < '2024-12-23 19:55:17.105789+00:00'::timestamptz
 LIMIT 50

Execution time: 0.000906s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."name" = 'system:player:38'
 LIMIT 21

Execution time: 0.000706s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."id" = 5
 LIMIT 21
   FOR UPDATE

Execution time: 0.001134s [Database: default]
INSERT INTO "django_eventstream_event" ("channel", "type", "data", "eid", "created")
VALUES ('system:player:38', 'message', E'"{\\"new-call\\": {\\"serialized\\": \\"1\\\\u2667\\", \\"hand\\": {\\"id\\": 1, \\"open_access\\": false, \\"table\\": 1, \\"board\\": 16}, \\"seat_pk\\": null}, \\"tempo_seconds\\": 1.0, \\"time\\": 1735070117.108588}"', 2, '2024-12-24 19:55:17.112882+00:00'::timestamptz) RETURNING "django_eventstream_event"."id"

Execution time: 0.000854s [Database: default]
UPDATE "django_eventstream_eventcounter"
   SET "name" = 'system:player:38',
       "value" = 2,
       "updated" = '2024-12-24 19:55:17.115089+00:00'::timestamptz
 WHERE "django_eventstream_eventcounter"."id" = 5

Execution time: 0.000830s [Database: default]
SELECT "django_eventstream_event"."id",
       "django_eventstream_event"."channel",
       "django_eventstream_event"."type",
       "django_eventstream_event"."data",
       "django_eventstream_event"."eid",
       "django_eventstream_event"."created"
  FROM "django_eventstream_event"
 WHERE "django_eventstream_event"."created" < '2024-12-23 19:55:17.121133+00:00'::timestamptz
 LIMIT 50

Execution time: 0.000812s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."name" = 'system:player:32'
 LIMIT 21

Execution time: 0.000714s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."id" = 6
 LIMIT 21
   FOR UPDATE

Execution time: 0.001072s [Database: default]
INSERT INTO "django_eventstream_event" ("channel", "type", "data", "eid", "created")
VALUES ('system:player:32', 'message', E'"{\\"new-call\\": {\\"serialized\\": \\"1\\\\u2667\\", \\"hand\\": {\\"id\\": 1, \\"open_access\\": false, \\"table\\": 1, \\"board\\": 16}, \\"seat_pk\\": null}, \\"tempo_seconds\\": 1.0, \\"time\\": 1735070117.123934}"', 2, '2024-12-24 19:55:17.128249+00:00'::timestamptz) RETURNING "django_eventstream_event"."id"

Execution time: 0.000774s [Database: default]
UPDATE "django_eventstream_eventcounter"
   SET "name" = 'system:player:32',
       "value" = 2,
       "updated" = '2024-12-24 19:55:17.130165+00:00'::timestamptz
 WHERE "django_eventstream_eventcounter"."id" = 6

Execution time: 0.000747s [Database: default]
SELECT "django_eventstream_event"."id",
       "django_eventstream_event"."channel",
       "django_eventstream_event"."type",
       "django_eventstream_event"."data",
       "django_eventstream_event"."eid",
       "django_eventstream_event"."created"
  FROM "django_eventstream_event"
 WHERE "django_eventstream_event"."created" < '2024-12-23 19:55:17.136126+00:00'::timestamptz
 LIMIT 50

Execution time: 0.000799s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."name" = 'system:player:33'
 LIMIT 21

Execution time: 0.000685s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."id" = 7
 LIMIT 21
   FOR UPDATE

Execution time: 0.001095s [Database: default]
INSERT INTO "django_eventstream_event" ("channel", "type", "data", "eid", "created")
VALUES ('system:player:33', 'message', E'"{\\"new-call\\": {\\"serialized\\": \\"1\\\\u2667\\", \\"hand\\": {\\"id\\": 1, \\"open_access\\": false, \\"table\\": 1, \\"board\\": 16}, \\"seat_pk\\": null}, \\"tempo_seconds\\": 1.0, \\"time\\": 1735070117.138755}"', 2, '2024-12-24 19:55:17.142815+00:00'::timestamptz) RETURNING "django_eventstream_event"."id"

Execution time: 0.000776s [Database: default]
UPDATE "django_eventstream_eventcounter"
   SET "name" = 'system:player:33',
       "value" = 2,
       "updated" = '2024-12-24 19:55:17.145006+00:00'::timestamptz
 WHERE "django_eventstream_eventcounter"."id" = 7

Execution time: 0.000848s [Database: default]
SELECT "django_eventstream_event"."id",
       "django_eventstream_event"."channel",
       "django_eventstream_event"."type",
       "django_eventstream_event"."data",
       "django_eventstream_event"."eid",
       "django_eventstream_event"."created"
  FROM "django_eventstream_event"
 WHERE "django_eventstream_event"."created" < '2024-12-23 19:55:17.151194+00:00'::timestamptz
 LIMIT 50

Execution time: 0.000899s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."name" = 'system:player:1'
 LIMIT 21

Execution time: 0.000674s [Database: default]
SELECT "django_eventstream_eventcounter"."id",
       "django_eventstream_eventcounter"."name",
       "django_eventstream_eventcounter"."value",
       "django_eventstream_eventcounter"."updated"
  FROM "django_eventstream_eventcounter"
 WHERE "django_eventstream_eventcounter"."id" = 8
 LIMIT 21
   FOR UPDATE

Execution time: 0.001190s [Database: default]
INSERT INTO "django_eventstream_event" ("channel", "type", "data", "eid", "created")
VALUES ('system:player:1', 'message', E'"{\\"new-call\\": {\\"serialized\\": \\"1\\\\u2667\\", \\"hand\\": {\\"id\\": 1, \\"open_access\\": false, \\"table\\": 1, \\"board\\": 16}, \\"seat_pk\\": null}, \\"tempo_seconds\\": 1.0, \\"time\\": 1735070117.154301}"', 2, '2024-12-24 19:55:17.158763+00:00'::timestamptz) RETURNING "django_eventstream_event"."id"

Execution time: 0.000790s [Database: default]
UPDATE "django_eventstream_eventcounter"
   SET "name" = 'system:player:1',
       "value" = 2,
       "updated" = '2024-12-24 19:55:17.160834+00:00'::timestamptz
 WHERE "django_eventstream_eventcounter"."id" = 8

Execution time: 0.000787s [Database: default]
SELECT "django_eventstream_event"."id",
       "django_eventstream_event"."channel",
       "django_eventstream_event"."type",
       "django_eventstream_event"."data",
       "django_eventstream_event"."eid",
       "django_eventstream_event"."created"
  FROM "django_eventstream_event"
 WHERE "django_eventstream_event"."created" < '2024-12-23 19:55:17.166797+00:00'::timestamptz
 LIMIT 50

Execution time: 0.000923s [Database: default]
Out[1]: <Call pk=1>

In [2]: Call.objects.create(hand_id=1, serialized="9♧")
INSERT INTO "app_call" ("hand_id", "serialized")
VALUES (1, '9♧') RETURNING "app_call"."id"

Execution time: 0.010083s [Database: default]
SELECT "app_hand"."id",
       "app_hand"."table_id",
       "app_hand"."board_id",
       "app_hand"."open_access"
  FROM "app_hand"
 WHERE "app_hand"."id" = 1
 LIMIT 21

Execution time: 0.000747s [Database: default]
SELECT "app_table"."id",
       "app_table"."tempo_seconds"
  FROM "app_table"
 WHERE "app_table"."id" = 1
 LIMIT 21

Execution time: 0.000508s [Database: default]
SELECT "app_board"."id",
       "app_board"."ns_vulnerable",
       "app_board"."ew_vulnerable",
       "app_board"."dealer",
       "app_board"."north_cards",
       "app_board"."east_cards",
       "app_board"."south_cards",
       "app_board"."west_cards",
       "app_board"."tournament_id"
  FROM "app_board"
 WHERE "app_board"."id" = 16
 LIMIT 21

Execution time: 0.000508s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 1)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.001719s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 2)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.001413s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 3)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.001258s [Database: default]
SELECT "app_seat"."id",
       "app_seat"."direction",
       "app_seat"."player_id",
       "app_seat"."table_id",
       "app_player"."id",
       "app_player"."user_id",
       "app_player"."allow_bot_to_play_for_me",
       "app_player"."partner_id",
       "app_player"."currently_seated",
       "auth_user"."id",
       "auth_user"."password",
       "auth_user"."last_login",
       "auth_user"."is_superuser",
       "auth_user"."username",
       "auth_user"."first_name",
       "auth_user"."last_name",
       "auth_user"."email",
       "auth_user"."is_staff",
       "auth_user"."is_active",
       "auth_user"."date_joined"
  FROM "app_seat"
 INNER JOIN "app_player"
    ON ("app_seat"."player_id" = "app_player"."id")
 INNER JOIN "auth_user"
    ON ("app_player"."user_id" = "auth_user"."id")
 WHERE ("app_seat"."table_id" = 1 AND "app_seat"."direction" = 4)
 ORDER BY "app_seat"."direction" ASC
 LIMIT 1

Execution time: 0.000651s [Database: default]
SELECT "app_call"."id",
       "app_call"."hand_id",
       "app_call"."serialized"
  FROM "app_call"
 WHERE "app_call"."hand_id" = 1
 ORDER BY "app_call"."id" ASC

Execution time: 0.000395s [Database: default]
---------------------------------------------------------------------------
IllegalCall                               Traceback (most recent call last)
Cell In[2], line 1
----> 1 Call.objects.create(hand_id=1, serialized="9♧")

File ~/git-repositories/me/bridge/server/project/app/models/hand.py:640, in CallManager.create(self, *args, **kwargs)
    635 from app.serializers import ReadOnlyCallSerializer
    637 rv = super().create(*args, **kwargs)
    639 rv.hand.send_event_to_players_and_hand(
--> 640     data={"new-call": ReadOnlyCallSerializer(rv).data},
    641 )
    643 return rv

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/rest_framework/serializers.py:571, in Serializer.data(self)
    569 @property
    570 def data(self):
--> 571     ret = super().data
    572     return ReturnDict(ret, serializer=self)

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/rest_framework/serializers.py:249, in BaseSerializer.data(self)
    247 if not hasattr(self, '_data'):
    248     if self.instance is not None and not getattr(self, '_errors', None):
--> 249         self._data = self.to_representation(self.instance)
    250     elif hasattr(self, '_validated_data') and not getattr(self, '_errors', None):
    251         self._data = self.to_representation(self.validated_data)

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/rest_framework/serializers.py:525, in Serializer.to_representation(self, instance)
    523 for field in fields:
    524     try:
--> 525         attribute = field.get_attribute(instance)
    526     except SkipField:
    527         continue

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/rest_framework/fields.py:437, in Field.get_attribute(self, instance)
    432 """
    433 Given the *outgoing* object instance, return the primitive value
    434 that should be used for this field.
    435 """
    436 try:
--> 437     return get_attribute(instance, self.source_attrs)
    438 except BuiltinSignatureError as exc:
    439     msg = (
    440         'Field source for `{serializer}.{field}` maps to a built-in '
    441         'function type and is invalid. Define a property or method on '
   (...)
    447         )
    448     )

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/rest_framework/fields.py:104, in get_attribute(instance, attrs)
    102         instance = instance[attr]
    103     else:
--> 104         instance = getattr(instance, attr)
    105 except ObjectDoesNotExist:
    106     return None

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/django/utils/functional.py:47, in cached_property.__get__(self, instance, cls)
     45 if instance is None:
     46     return self
---> 47 res = instance.__dict__[self.name] = self.func(instance)
     48 return res

File ~/git-repositories/me/bridge/server/project/app/models/hand.py:664, in Call.seat_pk(self)
    662 @cached_property
    663 def seat_pk(self) -> int | None:
--> 664     for pc in self.hand.get_xscript().auction.player_calls:
    665         if pc.call.serialize() == self.serialized:
    666             return self.hand.table.seats.get(direction=pc.player.seat.value).pk

File ~/git-repositories/me/bridge/server/project/app/models/hand.py:258, in Hand.get_xscript(self)
    255     auction = libAuction(table=lib_table, dealer=libSeat(self.board.dealer))
    257     for player, call in calls_starting_with(0):
--> 258         auction.append_located_call(player=player, call=call)
    260     self._xscript = HandTranscript(
    261         table=lib_table,
    262         auction=auction,
    263         ns_vuln=self.board.ns_vulnerable,
    264         ew_vuln=self.board.ew_vulnerable,
    265     )
    267 num_missing_calls = self.calls.count() - len(self._xscript.auction.player_calls)

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/bridge/auction.py:95, in Auction.append_located_call(self, player, call)
     92 _assert_type(player, Player)
     93 _assert_type(call, Call)
---> 95 self.raise_if_illegal_call(player=player, call=call)
     97 if call is Double:
     98     self.is_doubled = 2

File ~/git-repositories/me/bridge/server/.venv/lib/python3.13/site-packages/bridge/auction.py:199, in Auction.raise_if_illegal_call(self, player, call)
    197 if call not in self.legal_calls():
    198     msg = f"{call=} ain't legal"
--> 199     raise IllegalCall(msg)

IllegalCall: call=Bid(level=9, denomination=<Suit.CLUBS: 0>) ain't legal

In [3]: [vars(c) for c in Call.objects.all()]
SELECT "app_call"."id",
       "app_call"."hand_id",
       "app_call"."serialized"
  FROM "app_call"

Execution time: 0.001199s [Database: default]
Out[3]:
[{'_state': <django.db.models.base.ModelState at 0x10a20b470>,
  'id': 1,
  'hand_id': 1,
  'serialized': '1♧'},
 {'_state': <django.db.models.base.ModelState at 0x10a20bcb0>,
  'id': 2,
  'hand_id': 1,
  'serialized': '9♧'}]

In [4]:
